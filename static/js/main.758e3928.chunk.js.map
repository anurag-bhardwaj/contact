{"version":3,"sources":["Context.js","components/Contact.js","components/Contacts.js","components/Header.js","components/TextInputItems.js","components/AddContact.js","components/editContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","myfunction","e","deleteClick","a","delete","name","email","phone","className","onClick","bind","to","Contacts","key","Header","prop","branding","defaultProps","TextInputItems","label","placeholder","onChange","htmlFor","required","AddContact","target","onSubmit","preventDefault","newContact","uuid","axois","post","history","push","editContact","match","params","updContact","put","console","log","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.758e3928.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:  state.contacts.map(contact=> contact.id===action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({ contacts: res.data })\r\n    }\r\n\r\n    ;\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './contact.css';\r\nimport { Consumer } from '../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    myfunction = e => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    }\r\n    deleteClick = async (id, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showContactInfo } = this.state;\r\n        const { id, name, email, phone } = this.props.contact;\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value\r\n                        return (\r\n                            <div>\r\n                                <div className=\"storedet\">\r\n                                    <div id=\"name\">{name}  <span onClick={this.myfunction} className=\"icon\">&#8711;</span>\r\n                                    <span onClick={this.deleteClick.bind(this, id, dispatch)} className=\"xicon\">&#8855;</span>\r\n                                    <Link to={`/contact/edit/${id}`}><span className=\"xicon\">&#x270E;</span></Link>\r\n                                </div>\r\n                                {showContactInfo ? (<ul><li className=\"bnone\">Email: {email}</li><li>Number: {phone}</li></ul>) : null}\r\n                            </div>\r\n                        </div>\r\n        )\r\n    }\r\n}\r\n        </Consumer >)\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Contact;","import Contact from './Contact';\r\nimport React, { Component } from 'react'\r\nimport { Consumer } from '../Context.js';\r\nimport './contacts.css';\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer >\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <div>\r\n                            <div className=\"contact-heading\"><span className=\"make-red\">Contact</span> list</div>\r\n                            {contacts.map(contact =>\r\n                                <Contact key={contact.id} contact={contact} />)\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>)\r\n    }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(prop) {\r\n    return (\r\n        <div>\r\n            <div className=\"navBar\">\r\n                <div className=\"navmain\">\r\n                    <ul>\r\n                    <li className=\"heading\">{prop.branding} &spades;</li>\r\n                    <li className=\"navButton side\">\r\n                        <Link to=\"/\" > Home </Link>\r\n                    </li>\r\n                    <li className=\"navButton side\">\r\n                        <Link to=\"/contact/add\" > ADD </Link>\r\n                    </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nHeader.defaultProps = {\r\n    branding:\"My app\"\r\n}\r\n\r\nHeader.propTypes={\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextInputItems = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    onChange,\r\n    type\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"formchild\">\r\n                <label htmlFor={name}>{label}</label><br />\r\n                <input type={type} name={name} placeholder={placeholder} value={value} onChange={onChange} required/>\r\n            </div><br />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTextInputItems.propTypes= {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\nTextInputItems.defaultProps = {\r\n    type:\"text\"\r\n}\r\n\r\n\r\nexport default TextInputItems;\r\n","\timport React, { Component } from 'react'\r\nimport './AddContact.css';\r\nimport { Consumer } from '../Context';\r\nimport { v1 as uuid } from 'uuid';\r\nimport TextInputItems from './TextInputItems';\r\nimport axois from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n    onChange = (e) => this.setState({ [e.target.name] : [e.target.value] });\r\n    onSubmit = async(dispatch, e) => {\r\n        const { name, email, phone } = this.state;\r\n        e.preventDefault();\r\n       \r\n        const newContact = {\r\n            id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        await axois.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload:newContact});\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n        this.props.history.push(\"/\");\r\n    };\r\n    render() {\r\n        const { name, email, phone } = this.state\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div>\r\n                                <div id=\"mainContainer\">\r\n                                    <div className=\"HeadingCon\">Add Contact</div>\r\n                                    <div className=\"card\">\r\n                                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                            <TextInputItems\r\n                                                name=\"name\"\r\n                                                label=\"Name\"\r\n                                                value={name}\r\n                                                placeholder=\"Enter Name\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <TextInputItems\r\n                                                name=\"email\"\r\n                                                label=\"Email\"\r\n                                                type=\"email\"\r\n                                                value={email}\r\n                                                placeholder=\"Enter Email\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <TextInputItems\r\n                                                name=\"phone\"\r\n                                                label=\"Phone\"\r\n                                                value={phone}\r\n                                                placeholder=\"Enter Phone number\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <div className=\"formchild subB\">\r\n                                                <input type=\"submit\" value=\"Add Contact\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport './AddContact.css';\r\nimport { Consumer } from '../Context';\r\nimport TextInputItems from './TextInputItems';\r\nimport axois from 'axios';\r\n\r\nclass editContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    }\r\n    async componentDidMount() {\r\n        const {id} =this.props.match.params;\r\n        try{\r\n            const res= await axois.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact =res.data;\r\n        // console.log(contact);\r\n        this.setState(\r\n            {\r\n                name: contact.name,\r\n                email: contact.email,\r\n                phone: contact.phone\r\n            }\r\n        )\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name] : [e.target.value] });\r\n    onSubmit = async(dispatch, e) => {\r\n        const { name, email, phone } = this.state;\r\n        e.preventDefault();\r\n        const {id} =this.props.match.params;\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n       const res=await axois.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        dispatch({type: 'UPDATE_CONTACT',payload: res.data});\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        })\r\n        this.props.history.push(\"/\");\r\n    };\r\n    render() {\r\n        const { name, email, phone } = this.state\r\n        return (\r\n            <Consumer>\r\n                {\r\n                    value => {\r\n                        const { dispatch } = value;\r\n                        return (\r\n                            <div>\r\n                                <div id=\"mainContainer\">\r\n                                    <div className=\"HeadingCon\">Edit Contact</div>\r\n                                    <div className=\"card\">\r\n                                        <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                            <TextInputItems\r\n                                                name=\"name\"\r\n                                                label=\"Name\"\r\n                                                value={name}\r\n                                                placeholder=\"Enter Name\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <TextInputItems\r\n                                                name=\"email\"\r\n                                                label=\"Email\"\r\n                                                type=\"email\"\r\n                                                value={email}\r\n                                                placeholder=\"Enter Email\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <TextInputItems\r\n                                                name=\"phone\"\r\n                                                label=\"Phone\"\r\n                                                value={phone}\r\n                                                placeholder=\"Enter Phone number\"\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                            <div className=\"formchild subB\">\r\n                                                <input type=\"submit\" value=\"Update Contact\" />\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default editContact;","import React from 'react';\nimport Contacts from './components/Contacts';\nimport Header from './components/Header';\nimport AddContact from './components/AddContact';\nimport editContact from './components/editContact';\nimport './App.css';\nimport { Provider }  from './Context.js';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manger\"/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/contact/add\" component={AddContact} />\n            <Route exact path=\"/\" component={Contacts} />\n            <Route exact path =\"/contact/edit/:id\" component={editContact}/>\n          </Switch>\n          </div>\n      </div>\n      </Router>\n      </Provider>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}